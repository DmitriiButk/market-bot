services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    restart: always
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - static_value:/app/djproject/static
    env_file:
      - ./.env
    environment:
      - DB_HOST=db
    ports:
      - "8000:8000"
    command: >
      sh -c "cd /app/djproject &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn djproject.wsgi:application --bind 0.0.0.0:8000"

  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    restart: always
    depends_on:
      - web
    volumes:
      - .:/app
      - ./logs:/app/logs
    env_file:
      - ./.env
    environment:
      - DB_HOST=db
      - PYTHONPATH=/app
    command: python -m djproject.bot.main

volumes:
  static_value:
  postgres_data: